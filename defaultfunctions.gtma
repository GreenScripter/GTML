h,e,l,o, ,w,r,d
MARKER,PRINTPOINT,STACK,CURSOR,1,0
initial,I,accept,A

module findright:
inputsets,a
inputstates,result,fail

initial,US,a,result

initial,US,,fail
initial,AUR,initial

endmodule

module findleft:
inputsets,a
inputstates,result,fail

initial,US,a,result

initial,US,,fail
initial,AUL,initial

endmodule

module insert:
inputsets,a
inputstates,finish

initial,AUR,start

start,S,,a,finish
start,ARM(temp),MARKER,state2
state2,SD(temp),,temp,tomark
state2,ARM(temp),temp,state2

tomark,AUS,$findleft,MARKER,write,fail

write,S,MARKER,a,finish

endmodule

module insertright:
inputsets,a
inputstates,finish

initial,S,,a,finish
initial,ALM(temp),MARKER,state2
state2,SD(temp),,temp,tomark
state2,ALM(temp),temp,state2

tomark,AUS,$findright,MARKER,write,fail

write,S,MARKER,a,finish

endmodule

module printchar:
inputsets,a
inputstates,finish

initial,AUS,$findleft,PRINTPOINT,state2,state2

state2,AL,PRINTPOINT,state3
state3,AUS,$insertright,a,state4
state4,AUR,finish

endmodule

module returnprint:
inputsets
inputstates,accept

initial,AUS,$findleft,PRINTPOINT,state2,state2
state2,AL,,$findleft,,state3,state3
state3,AUR,accept

endmodule

module delete:
inputsets
inputstates,finish

initial,AS,MARKER,$findright,,state1,state1
state1,LM(temp),,,state2
state2,SD(temp),MARKER,temp,finish
state2,ALM(temp),temp,state2

endmodule

module pushstack:
inputsets
inputstates,finish

initial,AUS,$findright,,state2,state2

state2,R,,CURSOR,state3
state3,S,,STACK,finish
endmodule

module popstack:
inputsets
inputstates,finish

initial,AUS,$findright,,state2,state2

state2,L,,,state3
state3,L,STACK,,state4
state4,S,STACK,STACK,finish
state4,AL,,state4
endmodule

module endofstackentry:
inputsets
inputstates,true,false

initial,AUR,state2
state2,UL,STACK,true
state2,UL,,true
state2,AUL,false
endmodule

module startofstackentry:
inputsets
inputstates,true,false

initial,AUL,state2
state2,UR,STACK,true
state2,AUR,false
endmodule

module downstack:
inputsets
inputstates,finish

initial,UL,STACK,find
initial,AUS,find
find,US,STACK,finish
find,AUL,find
endmodule

module upstack:
inputsets
inputstates,finish

initial,UR,STACK,find
initial,AUS,find
find,US,STACK,finish
find,AUR,find
endmodule

module insertcursor:
inputsets,a
inputstates,finish

initial,AUR,start

start,S,,a,finish
start,ARM(temp),MARKER,state2
state2,SD(temp),,temp,tomark
state2,ARM(temp),temp,state2

tomark,AUS,$findleft,MARKER,write,fail

write,L,MARKER,a,finish

endmodule

module findcursor:
inputsets
inputstates,finish

initial,AUS,find
find,US,CURSOR,finish
find,AUL,find
endmodule

module nextcursor:
inputsets
inputstates,finish

initial,UR,CURSOR,start

start,ALM(temp),CURSOR,writeback
writeback,ARD(temp),temp,finish

endmodule

module previouscursor:
inputsets
inputstates,finish

initial,UL,CURSOR,start

start,ARM(temp),CURSOR,writeback
writeback,ALD(temp),temp,finish

endmodule

module deletestack:
inputsets
inputstates,finish

initial,AUS,$downstack,loopinit

loopinit,AUS,$delete,loop

loop,US,STACK,finish
loop,AUS,$delete,loop

endmodule

module removecursor:
inputsets
inputstates,finish

initial,UR,CURSOR,$delete,cleanup

cleanup,AUL,finish

endmodule

module resetcursor:
inputsets
inputstates,finish

initial,US,CURSOR,$startofstackentry,finish,moveback

moveback,AUS,$previouscursor,initial

endmodule

initial,AUL,stacksetup1
stacksetup1,AL,CURSOR,stacksetup2
stacksetup2,AR,STACK,$findright,,endstack,endstack
endstack,AS,STACK,_func_main


